New XML Stucture:

------------
Log informaiton ?
For sure add the possibility to set some option in the launcher

------------

Resource parsing. As it is seems fine.

------------

Task declaration As it is, without the activities.
Peers.

------------

Activities
	- policy
	- list of task per activity

------------

Externals:
	- attribute: task+attribute_name
	- ports
		- input: task+name
		- output: task+name


First steps:


example:

<package>
    <logconfig>
        <levels>0 1 2 3 4 6</levels>
        <outfile></outfile>
        <types>debug err</types>
    </logconfig>
     <resourcespaths>
        <librariespath>build/lib</librariespath>
        <librariespath>ros_components/devel/lib</librariespath>
        <path>resources/meshes</path>
        <path>resources/configuration_files/</path>
        <path>resources/</path>
        <path>resources/urdf</path>
    </resourcespaths>

    <includes>
    	<include name: />
    	...
    </includes>

    <components>
    	<componenent>
    		as it is now (name, lib, attribute, peers)
    	</componenent>
    	...
    </components>
	NOTE: In connections I can connect to components in include and viceversa.
	The include files should not present activities, but only components.
    <connections>
    	as it is
    </connections>

    <activities>
    	<activity>
    		<schedule: />
    		<components>
    			<component name: />
    			...
			</components>
    	</activity>
    </activities>


Next step add the possibility

incude structures:

<package_include>
	<resourcespaths>
        <librariespath>build/lib</librariespath>
        <librariespath>ros_components/devel/lib</librariespath>
        <path>resources/meshes</path>
        <path>resources/configuration_files/</path>
        <path>resources/</path>
        <path>resources/urdf</path>
    </resourcespaths>

    <components>
    	<componenent>
    		as it is now (name, lib, attribute, peers)
    	</componenent>
    	...
    </components>

    <connections>
    	as it is
    </connections>
</package_include>